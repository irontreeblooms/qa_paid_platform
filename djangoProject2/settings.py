"""
Django settings for djangoProject2 project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kx0_wbwacyv3*s^+vz($*r3s&cl*=sdfl*pt9!(wm$l#6%wmqa'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



import os

MEDIA_URL = '/media/'  # 访问URL前缀
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 存储路径



# 静态文件的 URL 路径前缀
STATIC_URL = '/static/'

# 静态文件目录设置（可以用来指向项目中的静态文件文件夹）
STATICFILES_DIRS = [
    BASE_DIR / "static",  # 将静态文件放在项目根目录下的 static 文件夹中
]

# 静态文件在生产环境中的存储路径（此配置通常在生产环境中启用）
STATIC_ROOT = BASE_DIR / "staticfiles"




# Application definition

AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',
    'rest_framework',
    'corsheaders',
    'courses',
    'questions.apps.QuestionsConfig',
    'payments.apps.PaymentsConfig'

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # 允许跨域
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoProject2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': []
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoProject2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '127.0.0.1',		# 要连接的数据库ip
        'PORT': '3306',				# 数据库连接端口，一般默认为3306
        'NAME': 'qa_paid_platform',			# 已经存在的数据库名称
        'USER': 'root',				# 用户名
        'PASSWORD': '123456',				# 用户密码
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            }
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#邮箱配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = '2856449558@qq.com'
EMAIL_HOST_PASSWORD = 'ckfinunmukjsdhba'  # 注意是授权码不是密码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


CORS_ALLOW_CREDENTIALS = True  # 必须为True
SESSION_COOKIE_SAMESITE = 'None'  # 开发环境设置为None
SESSION_COOKIE_SECURE = True      # 即使本地开发也设为True
CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SECURE = True

CORS_ALLOWED_ORIGINS = [
    'http://localhost:8080',  # 前端地址
]

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8080',  # Vue 前端地址，必须加 http
]

# 允许的 HTTP 方法
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]

# 允许的请求头
CORS_ALLOW_HEADERS = [
    "content-type", "authorization", "x-csrftoken"
]
